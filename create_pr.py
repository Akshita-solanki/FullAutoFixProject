import os
import subprocess
import requests
import uuid

REPO_OWNER = "your-username"
REPO_NAME = "your-repo-name"
GITHUB_API_URL = "https://api.github.com"
GITHUB_TOKEN = os.environ.get("GITHUB_TOKEN")
BRANCH_NAME = f"auto-fix-{uuid.uuid4().hex[:6]}"
COMMIT_MSG = "fix: auto-applied patch from error logs"
PR_TITLE = "Auto Fix: Patch generated by AI"
PR_BODY = "This PR was generated by an automated script based on the latest error logs."

def run_git(cmds):
    result = subprocess.run(["git"] + cmds, capture_output=True, text=True)
    if result.returncode != 0:
        print(f"‚ùå Git error: {result.stderr}")
        exit(1)
    return result.stdout.strip()

def create_branch_and_commit():
    print("üì¶ Creating branch and committing changes...")
    run_git(["checkout", "-b", BRANCH_NAME])
    run_git(["add", "."])
    run_git(["commit", "-m", COMMIT_MSG])
    run_git(["push", "-u", "origin", BRANCH_NAME])

def create_pull_request():
    print("üì¨ Creating pull request...")
    url = f"{GITHUB_API_URL}/repos/{REPO_OWNER}/{REPO_NAME}/pulls"
    headers = {
        "Authorization": f"token {GITHUB_TOKEN}",
        "Accept": "application/vnd.github+json"
    }
    data = {
        "title": PR_TITLE,
        "head": BRANCH_NAME,
        "base": "main",
        "body": PR_BODY
    }
    response = requests.post(url, headers=headers, json=data)
    if response.status_code == 201:
        pr_url = response.json()["html_url"]
        print(f"‚úÖ Pull request created: {pr_url}")
    else:
        print(f"‚ùå Failed to create PR: {response.status_code}")
        print(response.json())

if __name__ == "__main__":
    if not GITHUB_TOKEN:
        print("‚ùå Please set GITHUB_TOKEN in environment.")
        exit(1)
    create_branch_and_commit()
    create_pull_request()
