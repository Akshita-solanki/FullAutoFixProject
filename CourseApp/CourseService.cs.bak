using System;
using System.Linq;
using System.Collections.Generic;

public class CourseService
{
    public void Divide()
int a = 10;
int b = 1;
int result = a / b;

public void NullCheck()
{
    string instructor = null;
    if(instructor != null)
        Console.WriteLine(instructor.Length);
}

    public void FindCourse()
    {
        List<string> courses = new List<string>();
        var course = courses.First(c => c == "Math"); // InvalidOperationException
public class CourseService
{
    private ICourseRepository _courseRepository;

    public CourseService(ICourseRepository courseRepository)
    {
        _courseRepository = courseRepository ?? throw new ArgumentNullException(nameof(courseRepository));
    }

    public IEnumerable<Course> GetAllCourses()
    {
        return _courseRepository.GetAll();
    }

    public Course GetCourseById(int id)
    {
        return _courseRepository.GetById(id);
    }

    public void AddCourse(Course course)
    {
        _courseRepository.Add(course);
    }

    public void UpdateCourse(Course course)
    {
        _courseRepository.Update(course);
    }

    public void DeleteCourse(int id)
    {
        _courseRepository.Delete(id);
    }
}
